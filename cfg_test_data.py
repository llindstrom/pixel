# Generated by test_expand.py

import ctypes

def foo(s: 'loops.Array2', d: 'loops.Array2', a):
    s__0 = s
    d__0 = d
    (dim_0, dim_1) = s__0.shape
    s_ptr_0 = s__0.__array_interface__['data'][0]
    d_ptr_0 = d__0.__array_interface__['data'][0]
    (s_stride_0, s_stride_1) = s__0.strides
    (d_stride_0, d_stride_1) = d__0.strides
    s_delta_1 = s_stride_1 - s_stride_0 * dim_0
    d_delta_1 = d_stride_1 - d_stride_0 * dim_0
    s_end_1 = s_ptr_0 + s_stride_1 * dim_1
    while s_ptr_0 < s_end_1:
        s_end_0 = s_ptr_0 + s_stride_0 * dim_0
        while s_ptr_0 < s_end_0:
            d__1 = ctypes.c_long.from_address(d_ptr_0)
            d__1.value = (ctypes.c_long.from_address(s_ptr_0).value + d__1.value) // 2
            s_ptr_0 += s_stride_0
            d_ptr_0 += d_stride_0
        s_ptr_0 += s_delta_1
        d_ptr_0 += d_delta_1

##def bar(s: 'loops.Array2', d: 'loops.Surface'):
##    s__0 = s
##    d__0 = d
##    (dim_0, dim_1) = s__0.shape
##    s_ptr_0 = s__0.__array_interface__['data'][0]
##    d_ptr_0 = d__0._pixels_address
##    (s_stride_0, s_stride_1) = s__0.strides
##    (d_stride_0, d_stride_1) = (d__0.get_bytesize(), d__0.get_pitch())
##    s_delta_1 = s_stride_1 - s_stride_0 * dim_0
##    d_delta_1 = d_stride_1 - d_stride_0 * dim_0
##    s_end_1 = s_ptr_0 + s_stride_1 * dim_1
##    while s_ptr_0 < s_end_1:
##        s_end_0 = s_ptr_0 + s_stride_0 * dim_0
##        while s_ptr_0 < s_end_0:
##            ctypes.c_long.from_address(d_ptr_0).value = ctypes.c_long.from_address(s_ptr_0).value
##            s_ptr_0 += s_stride_0
##            d_ptr_0 += d_stride_0
##        s_ptr_0 += s_delta_1
##        d_ptr_0 += d_delta_1

# Symbol Table
#
#  'loops': <module 'loops.blitkit' from '/home/lenard/Projects/python/pygame/pixel/loops/blitkit.py'>
#  'int': <Tint()>
#  'str': <Tstr()>
#  'tuple': <TTuple[]>
#  'loops.Pixel': <TPixel[]>
#  'loops.Pointer': <TPointer[]>
#  'loops.Array2': <loops.typer.TArray2 object at 0xb6f85598>
#  'loops.Surface': <loops.typer.TSurface object at 0xb6f855c8>
#  'ctypes.c_char': <TExternal(ctypes.c_char)>
#  'ctypes.c_long': <TExternal(ctypes.c_long)>
#  'foo': {'s': 'loops.Array2', 'loops.Array2': <loops.typer.TArray2 object at 0xb6f85598>, 'd': 'loops.Array2', 's__0': 'loops.Array2', 'd__0': 'loops.Array2', '(int, int)': <TTuple['int', 'int']>, 'dim_0': 'int', 'dim_1': 'int', '(int) -> loops.Pointer[ctypes.c_char]': <Class <TPointerInstance[ctypes.c_char]>>, 'int': <Tint()>, 'loops.Pointer[ctypes.c_char]': <TPointerInstance[ctypes.c_char]>, 's_ptr_0': 'loops.Pointer[ctypes.c_char]', 'd_ptr_0': 'loops.Pointer[ctypes.c_char]', 's_stride_0': 'int', 's_stride_1': 'int', 'd_stride_0': 'int', 'd_stride_1': 'int', 's_delta_1': 'int', 'd_delta_1': 'int', 's_end_1': 'loops.Pointer[ctypes.c_char]', 's_end_0': 'loops.Pointer[ctypes.c_char]', 'ctypes.c_long': <TExternal(ctypes.c_long)>, '(loops.Pointer[Any]) -> loops.Pixel[ctypes.c_long]': <Class <TPixelInstance[ctypes.c_long]>>, 'loops.Pixel[ctypes.c_long]': <TPixelInstance[ctypes.c_long]>, 'd__1': 'loops.Pixel[ctypes.c_long]'}
#  'bar': {'s': 'loops.Array2', 'loops.Array2': <loops.typer.TArray2 object at 0xb6f85598>, 'd': 'loops.Surface', 'loops.Surface': <loops.typer.TSurface object at 0xb6f855c8>, 's__0': 'loops.Array2', 'd__0': 'loops.Surface', '(int, int)': <TTuple['int', 'int']>, 'dim_0': 'int', 'dim_1': 'int', '(int) -> loops.Pointer[ctypes.c_char]': <Class <TPointerInstance[ctypes.c_char]>>, 'int': <Tint()>, 'loops.Pointer[ctypes.c_char]': <TPointerInstance[ctypes.c_char]>, 's_ptr_0': 'loops.Pointer[ctypes.c_char]', 'd_ptr_0': 'loops.Pointer[ctypes.c_char]', 's_stride_0': 'int', 's_stride_1': 'int', 'd_stride_0': 'int', 'd_stride_1': 'int', 's_delta_1': 'int', 'd_delta_1': 'int', 's_end_1': 'loops.Pointer[ctypes.c_char]', 's_end_0': 'loops.Pointer[ctypes.c_char]', 'ctypes.c_long': <TExternal(ctypes.c_long)>, '(loops.Pointer[Any]) -> loops.Pixel[ctypes.c_long]': <Class <TPixelInstance[ctypes.c_long]>>, 'loops.Pixel[ctypes.c_long]': <TPixelInstance[ctypes.c_long]>}
