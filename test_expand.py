import expand
import blitkit
import numpy
import ast

source = """\
@blitkit.blitter(blitkit.Array2, blitkit.Array2)
def foo(s, d):
    d.pixel = s
"""

symtab = {'blitkit': blitkit}

module_ast, symtab = expand.stage_1(source, '<str>', symtab)
python_source = ast.unparse(module_ast)

path = 'stage_1.txt'
with open(path, 'w', encoding='utf-8') as f:
    f.write("# Generated by test_blitter.py\n\n")
    f.write(python_source)
    f.write("\n\n# Symbol Table\n#\n")
    for key, item in symtab.items():
        f.write(f"#  '{key}': {repr(item)}\n")
##
##from test_blitter import foo
##print(list(foo.__globals__.keys()))
##
##def fill(a):
##    w, h = a.shape
##    for j in range(h):
##        for i in range(w):
##            a[i, j] = (i + 1) * 10 + (j + 1)
##
##s = numpy.zeros((12, 9), dtype=numpy.int32)
##fill(s)
##d = numpy.zeros((12, 9), dtype=numpy.int32, order='F')
##assert(not (s == d).any())
##foo(s, d)
##assert((s == d).all())
##s[:, :] = 0
##assert(not (s == d).any())
##foo(d, s)
##assert((s == d).all())
